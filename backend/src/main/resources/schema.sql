CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  password VARCHAR(255),
  first_name VARCHAR(255),
  last_name VARCHAR(255),
  email VARCHAR(255) UNIQUE NOT NULL,
  role VARCHAR(50) NOT NULL,
  phone_number VARCHAR(255),
  location VARCHAR(255),
  membership VARCHAR(255),
  bio TEXT,
  title VARCHAR(255),
  date_of_birth DATE,
  avatar_url VARCHAR(255),
  created_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS organizers (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  bio VARCHAR(255),
  email VARCHAR(255) UNIQUE NOT NULL,
  user_id BIGINT UNIQUE
);

CREATE TABLE IF NOT EXISTS venues (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  address VARCHAR(255) NOT NULL,
  map_embed_link TEXT,
  map_view_link TEXT,
  CONSTRAINT venues_name_address_unique UNIQUE (name, address)
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  creator_id BIGINT,
  category_id BIGINT,
  title VARCHAR(255),
  description TEXT,
  location VARCHAR(255),
  end_time TIMESTAMP,
  price VARCHAR(255),
  start_time TIMESTAMP NOT NULL,
  language VARCHAR(255),
  about VARCHAR(255),
  badge VARCHAR(255),
  image_url VARCHAR(255),
  status VARCHAR(255),
  is_user_event BOOLEAN DEFAULT false,
  created_at TIMESTAMP,
  updated_at TIMESTAMP,
  venue_id BIGINT,
  organizer_id BIGINT,
  additional_info VARCHAR(1000)
);

CREATE TABLE IF NOT EXISTS event_tickets (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  event_id BIGINT NOT NULL,
  name VARCHAR(255),
  description VARCHAR(255),
  price DOUBLE PRECISION,
  available BOOLEAN,
  quantity INT,
  sale_start TIMESTAMP,
  sale_end TIMESTAMP,
  version BIGINT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS tickets (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL,
  event_id BIGINT NOT NULL,
  event_ticket_id BIGINT NOT NULL,
  confirmed BOOLEAN
);

CREATE TABLE IF NOT EXISTS favorites (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT,
  event_id BIGINT,
  favourited_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS reports (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT,
  event_id BIGINT,
  reason TEXT,
  reported_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS password_reset_token (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  token VARCHAR(255),
  user_id BIGINT UNIQUE,
  expiry_date TIMESTAMP
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_favorites_user_event ON favorites (user_id, event_id);

ALTER TABLE events ADD FOREIGN KEY (creator_id) REFERENCES users (id);
ALTER TABLE events ADD FOREIGN KEY (category_id) REFERENCES categories (id);
ALTER TABLE events ADD FOREIGN KEY (venue_id) REFERENCES venues (id);
ALTER TABLE events ADD FOREIGN KEY (organizer_id) REFERENCES organizers (id);
ALTER TABLE event_tickets ADD FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE tickets ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE tickets ADD FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE tickets ADD FOREIGN KEY (event_ticket_id) REFERENCES event_tickets (id);
ALTER TABLE favorites ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE favorites ADD FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE reports ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE reports ADD FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE password_reset_token ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE organizers ADD FOREIGN KEY (user_id) REFERENCES users (id);
